/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.sticks;

import java.util.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author vovab
 */
public class Field extends javax.swing.JPanel implements MouseListener{
    List<MyLine> lines = new ArrayList();
            
    public Field() {
        initComponents();
        addMouseListener(this);
        //points = new ArrayList();
    }
    
    @Override
    public void mouseClicked(MouseEvent e) {
        int size = this.getSize().height/6;
        Positions pos;
        int index_x, index_y;
        if (e.getX() % size < 10) {
            pos = Positions.VERTICAL;
            index_x = e.getX()/size;
            index_y = e.getY()/size;
            lines.add(new MyLine(index_x*size, index_y*size, pos));
        } else if (e.getX() % size > 25) {
            pos = Positions.VERTICAL;
            index_x = e.getX()/size + 1;
            index_y = e.getY()/size;
            lines.add(new MyLine(index_x*size, index_y*size, pos));
        } else {
            pos = Positions.HORIZONTAL;
            index_x = e.getX()/size;
            index_y = e.getY()/size;
            lines.add(new MyLine(index_x*size, index_y*size, pos));
        }
        this.repaint();
    }
    
    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {}

    @Override
    public void mouseExited(MouseEvent e) {}
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        int size = this.getSize().height/6;
        Graphics2D g2d = (Graphics2D) g;
        
        for (int i = 0; i < 7; i++) 
            for (int j = 0; j < 7; j++) {
                g2d.drawOval(size*j, size*i, 5, 5);
                g2d.fillOval(size*j, size*i, 5, 5);
            }
        
        for (MyLine line : lines) {
            g2d.setStroke(new BasicStroke(3));
            if (line.getPos() == Positions.HORIZONTAL) {
                g2d.drawLine(line.getX()+2, line.getY()+2, 
                line.getX()+size+2, line.getY()+2);
            } else {
                g2d.drawLine(line.getX()+2, line.getY()+2, 
                line.getX()+2, line.getY()+size+2);
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
